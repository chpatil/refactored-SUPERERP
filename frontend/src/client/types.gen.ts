// This file is auto-generated by @hey-api/openapi-ts

export type AttendanceCreate = {
    check_in: string;
    check_out?: (string | null);
    break_duration?: (number | null);
    location?: (string | null);
    notes?: (string | null);
};

export type AttendancePublic = {
    check_in: string;
    check_out?: (string | null);
    break_duration?: (number | null);
    location?: (string | null);
    notes?: (string | null);
    id: string;
    employee_id: string;
    date: string;
    created_at: string;
};

export type AttendancesPublic = {
    data: Array<AttendancePublic>;
    count: number;
};

export type AttendanceUpdate = {
    check_out?: (string | null);
    break_duration?: (number | null);
    notes?: (string | null);
};

export type Body_login_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    description?: (string | null);
};

export type ItemPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
};

export type ItemsPublic = {
    data: Array<ItemPublic>;
    count: number;
};

export type ItemUpdate = {
    title?: (string | null);
    description?: (string | null);
};

export type LeaveRequestCreate = {
    leave_type: string;
    start_date: string;
    end_date: string;
    reason: string;
    status?: LeaveStatus;
};

export type LeaveRequestPublic = {
    leave_type: string;
    start_date: string;
    end_date: string;
    reason: string;
    status?: LeaveStatus;
    id: string;
    employee_id: string;
    supervisor_id: (string | null);
    supervisor_comments: (string | null);
    created_at: string;
    updated_at: string;
};

export type LeaveRequestsPublic = {
    data: Array<LeaveRequestPublic>;
    count: number;
};

export type LeaveRequestUpdate = {
    status: LeaveStatus;
    supervisor_comments?: (string | null);
};

export type LeaveStatus = 'pending' | 'approved' | 'rejected';

export type Message = {
    message: string;
};

export type NewPassword = {
    token: string;
    new_password: string;
};

export type PrivateUserCreate = {
    email: string;
    password: string;
    full_name: string;
    is_verified?: boolean;
};

export type QRCodePublic = {
    code: string;
    expires_at: string;
    is_used?: boolean;
    id: string;
    created_at: string;
};

export type TeamAssignmentCreate = {
    team_name: string;
    site_location?: (string | null);
};

export type TeamAssignmentPublic = {
    team_name: string;
    site_location?: (string | null);
    id: string;
    supervisor_id: string;
    laborer_id: string;
    assigned_date: string;
    is_active: boolean;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    role?: UserRole;
    employee_id?: (string | null);
    department?: (string | null);
    supervisor_id?: (string | null);
    password: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    role?: UserRole;
    employee_id?: (string | null);
    department?: (string | null);
    supervisor_id?: (string | null);
    id: string;
};

export type UserRegister = {
    email: string;
    password: string;
    full_name?: (string | null);
};

export type UserRole = 'admin' | 'supervisor' | 'laborer';

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    role?: UserRole;
    employee_id?: (string | null);
    department?: (string | null);
    supervisor_id?: (string | null);
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type WorkerCreate = {
    name: string;
    gender?: (string | null);
    department?: (string | null);
    address?: (string | null);
    aadhar?: (string | null);
    bankname?: (string | null);
    ifscode?: (string | null);
    accountno?: (string | null);
    pfno?: (string | null);
    esicno?: (string | null);
};

export type WorkerPublic = {
    name: string;
    gender?: (string | null);
    department?: (string | null);
    address?: (string | null);
    aadhar?: (string | null);
    bankname?: (string | null);
    ifscode?: (string | null);
    accountno?: (string | null);
    pfno?: (string | null);
    esicno?: (string | null);
    id: string;
    owner_id: string;
};

export type WorkersPublic = {
    data: Array<WorkerPublic>;
    count: number;
};

export type WorkerUpdate = {
    name?: (string | null);
    gender?: (string | null);
    department?: (string | null);
    address?: (string | null);
    aadhar?: (string | null);
    bankname?: (string | null);
    ifscode?: (string | null);
    accountno?: (string | null);
    pfno?: (string | null);
    esicno?: (string | null);
};

export type AttendanceReadAttendanceRecordsData = {
    employeeId?: (string | null);
    endDate?: (string | null);
    limit?: number;
    skip?: number;
    startDate?: (string | null);
};

export type AttendanceReadAttendanceRecordsResponse = (AttendancesPublic);

export type AttendanceCreateAttendanceRecordData = {
    requestBody: AttendanceCreate;
};

export type AttendanceCreateAttendanceRecordResponse = (AttendancePublic);

export type AttendanceReadAttendanceRecordData = {
    id: string;
};

export type AttendanceReadAttendanceRecordResponse = (AttendancePublic);

export type AttendanceUpdateAttendanceRecordData = {
    id: string;
    requestBody: AttendanceUpdate;
};

export type AttendanceUpdateAttendanceRecordResponse = (AttendancePublic);

export type AttendanceCheckOutData = {
    id: string;
};

export type AttendanceCheckOutResponse = (AttendancePublic);

export type AttendanceGetDailyAttendanceSummaryData = {
    date: string;
    siteLocation?: (string | null);
};

export type AttendanceGetDailyAttendanceSummaryResponse = (unknown);

export type ItemsReadItemsData = {
    limit?: number;
    skip?: number;
};

export type ItemsReadItemsResponse = (ItemsPublic);

export type ItemsCreateItemData = {
    requestBody: ItemCreate;
};

export type ItemsCreateItemResponse = (ItemPublic);

export type ItemsReadItemData = {
    id: string;
};

export type ItemsReadItemResponse = (ItemPublic);

export type ItemsUpdateItemData = {
    id: string;
    requestBody: ItemUpdate;
};

export type ItemsUpdateItemResponse = (ItemPublic);

export type ItemsDeleteItemData = {
    id: string;
};

export type ItemsDeleteItemResponse = (Message);

export type LeaveRequestsReadLeaveRequestsData = {
    limit?: number;
    skip?: number;
};

export type LeaveRequestsReadLeaveRequestsResponse = (LeaveRequestsPublic);

export type LeaveRequestsCreateLeaveRequestData = {
    requestBody: LeaveRequestCreate;
};

export type LeaveRequestsCreateLeaveRequestResponse = (LeaveRequestPublic);

export type LeaveRequestsReadLeaveRequestData = {
    id: string;
};

export type LeaveRequestsReadLeaveRequestResponse = (LeaveRequestPublic);

export type LeaveRequestsUpdateLeaveRequestData = {
    id: string;
    requestBody: LeaveRequestUpdate;
};

export type LeaveRequestsUpdateLeaveRequestResponse = (LeaveRequestPublic);

export type LeaveRequestsDeleteLeaveRequestData = {
    id: string;
};

export type LeaveRequestsDeleteLeaveRequestResponse = (Message);

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = (Token);

export type LoginTestTokenResponse = (UserPublic);

export type LoginRecoverPasswordData = {
    email: string;
};

export type LoginRecoverPasswordResponse = (Message);

export type LoginResetPasswordData = {
    requestBody: NewPassword;
};

export type LoginResetPasswordResponse = (Message);

export type LoginRecoverPasswordHtmlContentData = {
    email: string;
};

export type LoginRecoverPasswordHtmlContentResponse = (string);

export type PrivateCreateUserData = {
    requestBody: PrivateUserCreate;
};

export type PrivateCreateUserResponse = (UserPublic);

export type QrAuthenticationGenerateQrCodeResponse = (QRCodePublic);

export type QrAuthenticationValidateQrCodeData = {
    employeeId: string;
    qrCode: string;
};

export type QrAuthenticationValidateQrCodeResponse = (Token);

export type QrAuthenticationCheckQrStatusData = {
    code: string;
};

export type QrAuthenticationCheckQrStatusResponse = (unknown);

export type ReportsGetAttendanceSummaryData = {
    endDate: string;
    siteLocation?: (string | null);
    startDate: string;
    supervisorId?: (string | null);
    teamName?: (string | null);
};

export type ReportsGetAttendanceSummaryResponse = (unknown);

export type ReportsGetLeaveSummaryData = {
    endDate: string;
    startDate: string;
    status?: (LeaveStatus | null);
    supervisorId?: (string | null);
};

export type ReportsGetLeaveSummaryResponse = (unknown);

export type ReportsGetTeamPerformanceReportData = {
    endDate: string;
    startDate: string;
};

export type ReportsGetTeamPerformanceReportResponse = (unknown);

export type ReportsGetDashboardStatisticsResponse = (unknown);

export type TeamsReadTeamAssignmentsData = {
    isActive?: boolean;
    limit?: number;
    skip?: number;
    supervisorId?: (string | null);
};

export type TeamsReadTeamAssignmentsResponse = (Array<TeamAssignmentPublic>);

export type TeamsCreateTeamAssignmentData = {
    laborerId: string;
    requestBody: TeamAssignmentCreate;
};

export type TeamsCreateTeamAssignmentResponse = (TeamAssignmentPublic);

export type TeamsGetMyTeamResponse = (Array<{
    [key: string]: unknown;
}>);

export type TeamsUpdateTeamAssignmentData = {
    id: string;
    requestBody: TeamAssignmentCreate;
};

export type TeamsUpdateTeamAssignmentResponse = (TeamAssignmentPublic);

export type TeamsDeactivateTeamAssignmentData = {
    id: string;
};

export type TeamsDeactivateTeamAssignmentResponse = (Message);

export type TeamsGetTeamStatisticsData = {
    supervisorId: string;
};

export type TeamsGetTeamStatisticsResponse = (unknown);

export type UsersReadUsersData = {
    limit?: number;
    skip?: number;
};

export type UsersReadUsersResponse = (UsersPublic);

export type UsersCreateUserData = {
    requestBody: UserCreate;
};

export type UsersCreateUserResponse = (UserPublic);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersDeleteUserMeResponse = (Message);

export type UsersUpdateUserMeData = {
    requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = (UserPublic);

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = (Message);

export type UsersRegisterUserData = {
    requestBody: UserRegister;
};

export type UsersRegisterUserResponse = (UserPublic);

export type UsersReadUserByIdData = {
    userId: string;
};

export type UsersReadUserByIdResponse = (UserPublic);

export type UsersUpdateUserData = {
    requestBody: UserUpdate;
    userId: string;
};

export type UsersUpdateUserResponse = (UserPublic);

export type UsersDeleteUserData = {
    userId: string;
};

export type UsersDeleteUserResponse = (Message);

export type UtilsTestEmailData = {
    emailTo: string;
};

export type UtilsTestEmailResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);

export type WorkersReadWorkersData = {
    limit?: number;
    skip?: number;
};

export type WorkersReadWorkersResponse = (WorkersPublic);

export type WorkersCreateWorkerData = {
    requestBody: WorkerCreate;
};

export type WorkersCreateWorkerResponse = (WorkerPublic);

export type WorkersReadWorkerData = {
    id: string;
};

export type WorkersReadWorkerResponse = (WorkerPublic);

export type WorkersUpdateWorkerData = {
    id: string;
    requestBody: WorkerUpdate;
};

export type WorkersUpdateWorkerResponse = (WorkerPublic);

export type WorkersDeleteWorkerData = {
    id: string;
};

export type WorkersDeleteWorkerResponse = (WorkerPublic);