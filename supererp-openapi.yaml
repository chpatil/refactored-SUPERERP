openapi: 3.1.0
info:
  title: SuperERP
  version: 0.1.0
paths:
  /api/v1/login/access-token:
    post:
      tags:
      - login
      summary: Login Access Token
      description: OAuth2 compatible token login, get an access token for future requests
      operationId: login-login_access_token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login-login_access_token'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/login/test-token:
    post:
      tags:
      - login
      summary: Test Token
      description: Test access token
      operationId: login-test_token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/password-recovery/{email}:
    post:
      tags:
      - login
      summary: Recover Password
      description: Password Recovery
      operationId: login-recover_password
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
          title: Email
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/reset-password/:
    post:
      tags:
      - login
      summary: Reset Password
      description: Reset password
      operationId: login-reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/password-recovery-html-content/{email}:
    post:
      tags:
      - login
      summary: Recover Password Html Content
      description: HTML Content for Password Recovery
      operationId: login-recover_password_html_content
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
          title: Email
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/:
    get:
      tags:
      - users
      summary: Read Users
      description: Retrieve users.
      operationId: users-read_users
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - users
      summary: Create User
      description: Create new user.
      operationId: users-create_user
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/me:
    get:
      tags:
      - users
      summary: Read User Me
      description: Get current user.
      operationId: users-read_user_me
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - users
      summary: Delete User Me
      description: Delete own user.
      operationId: users-delete_user_me
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      security:
      - OAuth2PasswordBearer: []
    patch:
      tags:
      - users
      summary: Update User Me
      description: Update own user.
      operationId: users-update_user_me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateMe'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/users/me/password:
    patch:
      tags:
      - users
      summary: Update Password Me
      description: Update own password.
      operationId: users-update_password_me
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /api/v1/users/signup:
    post:
      tags:
      - users
      summary: Register User
      description: Create new user without the need to be logged in.
      operationId: users-register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/users/{user_id}:
    get:
      tags:
      - users
      summary: Read User By Id
      description: Get a specific user by id.
      operationId: users-read_user_by_id
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
      - users
      summary: Update User
      description: Update a user.
      operationId: users-update_user
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: User Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - users
      summary: Delete User
      description: Delete a user.
      operationId: users-delete_user
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: User Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/utils/test-email/:
    post:
      tags:
      - utils
      summary: Test Email
      description: Test emails.
      operationId: utils-test_email
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: email_to
        in: query
        required: true
        schema:
          type: string
          format: email
          title: Email To
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/utils/health-check/:
    get:
      tags:
      - utils
      summary: Health Check
      operationId: utils-health_check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: boolean
                title: Response Utils-Health Check
  /api/v1/items/:
    get:
      tags:
      - items
      summary: Read Items
      description: Retrieve items.
      operationId: items-read_items
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - items
      summary: Create Item
      description: Create new item.
      operationId: items-create_item
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/items/{id}:
    get:
      tags:
      - items
      summary: Read Item
      description: Get item by ID.
      operationId: items-read_item
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - items
      summary: Update Item
      description: Update an item.
      operationId: items-update_item
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - items
      summary: Delete Item
      description: Delete an item.
      operationId: items-delete_item
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/workers/:
    get:
      tags:
      - workers
      summary: Read Workers
      description: Retrieve workers.
      operationId: workers-read_workers
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkersPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - workers
      summary: Create Worker
      description: Create new worker.
      operationId: workers-create_worker
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/workers/{id}:
    get:
      tags:
      - workers
      summary: Read Worker
      description: Get worker by ID.
      operationId: workers-read_worker
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - workers
      summary: Update Worker
      description: Update a worker.
      operationId: workers-update_worker
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkerUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - workers
      summary: Delete Worker
      description: Delete a worker.
      operationId: workers-delete_worker
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/leave-requests/:
    get:
      tags:
      - leave-requests
      summary: Read Leave Requests
      description: 'Retrieve leave requests.

        - Admin: can see all requests

        - Supervisor: can see their team''s requests

        - Laborer: can see only their own requests'
      operationId: leave-requests-read_leave_requests
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestsPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - leave-requests
      summary: Create Leave Request
      description: 'Create new leave request.

        Only laborers can create leave requests for themselves.'
      operationId: leave-requests-create_leave_request
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveRequestCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/leave-requests/{id}:
    get:
      tags:
      - leave-requests
      summary: Read Leave Request
      description: Get leave request by ID.
      operationId: leave-requests-read_leave_request
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - leave-requests
      summary: Update Leave Request
      description: 'Update leave request (approve/reject).

        Only supervisors and admins can update leave requests.'
      operationId: leave-requests-update_leave_request
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveRequestUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - leave-requests
      summary: Delete Leave Request
      description: 'Delete a leave request.

        Only the employee who created it or admin can delete.'
      operationId: leave-requests-delete_leave_request
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/qr-auth/generate:
    post:
      tags:
      - qr-authentication
      summary: Generate Qr Code
      description: 'Generate a new QR code for login.

        QR codes expire after 5 minutes.'
      operationId: qr-authentication-generate_qr_code
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCodePublic'
  /api/v1/qr-auth/validate:
    post:
      tags:
      - qr-authentication
      summary: Validate Qr Code
      description: Validate QR code and authenticate user.
      operationId: qr-authentication-validate_qr_code
      parameters:
      - name: qr_code
        in: query
        required: true
        schema:
          type: string
          title: Qr Code
      - name: employee_id
        in: query
        required: true
        schema:
          type: string
          title: Employee Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/qr-auth/status/{code}:
    get:
      tags:
      - qr-authentication
      summary: Check Qr Status
      description: Check if QR code is still valid and unused.
      operationId: qr-authentication-check_qr_status
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          title: Code
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Qr-Authentication-Check Qr Status
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/attendance/:
    get:
      tags:
      - attendance
      summary: Read Attendance Records
      description: Retrieve attendance records.
      operationId: attendance-read_attendance_records
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: employee_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Employee Id
      - name: start_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date
          - type: 'null'
          title: Start Date
      - name: end_date
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: date
          - type: 'null'
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancesPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - attendance
      summary: Create Attendance Record
      description: Create new attendance record (check-in).
      operationId: attendance-create_attendance_record
      security:
      - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/attendance/{id}:
    get:
      tags:
      - attendance
      summary: Read Attendance Record
      description: Get attendance record by ID.
      operationId: attendance-read_attendance_record
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - attendance
      summary: Update Attendance Record
      description: Update attendance record (check-out, add notes, etc.).
      operationId: attendance-update_attendance_record
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/attendance/check-out/{id}:
    post:
      tags:
      - attendance
      summary: Check Out
      description: Quick check-out for an attendance record.
      operationId: attendance-check_out
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendancePublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/attendance/daily-summary/{date}:
    get:
      tags:
      - attendance
      summary: Get Daily Attendance Summary
      description: 'Get daily attendance summary for reporting.

        Supervisors see their team, admins see all.'
      operationId: attendance-get_daily_attendance_summary
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: date
        in: path
        required: true
        schema:
          type: string
          format: date
          title: Date
      - name: site_location
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Site Location
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Attendance-Get Daily Attendance Summary
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/teams/:
    get:
      tags:
      - teams
      summary: Read Team Assignments
      description: Retrieve team assignments.
      operationId: teams-read_team_assignments
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: skip
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Skip
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          title: Limit
      - name: supervisor_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
      - name: is_active
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Is Active
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TeamAssignmentPublic'
                title: Response Teams-Read Team Assignments
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - teams
      summary: Create Team Assignment
      description: 'Create new team assignment.

        Only admins can create team assignments.'
      operationId: teams-create_team_assignment
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: laborer_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
          title: Laborer Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamAssignmentCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAssignmentPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/teams/my-team:
    get:
      tags:
      - teams
      summary: Get My Team
      description: Get team members for a supervisor.
      operationId: teams-get_my_team
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
                title: Response Teams-Get My Team
      security:
      - OAuth2PasswordBearer: []
  /api/v1/teams/{id}:
    put:
      tags:
      - teams
      summary: Update Team Assignment
      description: 'Update team assignment.

        Only admins and the assigned supervisor can update.'
      operationId: teams-update_team_assignment
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamAssignmentCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAssignmentPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - teams
      summary: Deactivate Team Assignment
      description: 'Deactivate a team assignment.

        Only admins can deactivate assignments.'
      operationId: teams-deactivate_team_assignment
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/teams/team-stats/{supervisor_id}:
    get:
      tags:
      - teams
      summary: Get Team Statistics
      description: Get team statistics for a supervisor.
      operationId: teams-get_team_statistics
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: supervisor_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Supervisor Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Teams-Get Team Statistics
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/reports/attendance-summary:
    get:
      tags:
      - reports
      summary: Get Attendance Summary
      description: Get attendance summary report for a date range.
      operationId: reports-get_attendance_summary
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: Start Date
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: End Date
      - name: site_location
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Site Location
      - name: team_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Team Name
      - name: supervisor_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reports-Get Attendance Summary
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/reports/leave-summary:
    get:
      tags:
      - reports
      summary: Get Leave Summary
      description: Get leave requests summary for a date range.
      operationId: reports-get_leave_summary
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: Start Date
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: End Date
      - name: status
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/LeaveStatus'
          - type: 'null'
          title: Status
      - name: supervisor_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reports-Get Leave Summary
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/reports/team-performance:
    get:
      tags:
      - reports
      summary: Get Team Performance Report
      description: Get team performance report.
      operationId: reports-get_team_performance_report
      security:
      - OAuth2PasswordBearer: []
      parameters:
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: Start Date
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          format: date
          title: End Date
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reports-Get Team Performance Report
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/v1/reports/dashboard-stats:
    get:
      tags:
      - reports
      summary: Get Dashboard Statistics
      description: Get dashboard statistics for the current user.
      operationId: reports-get_dashboard_statistics
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Reports-Get Dashboard Statistics
      security:
      - OAuth2PasswordBearer: []
  /api/v1/private/users/:
    post:
      tags:
      - private
      summary: Create User
      description: Create a new user.
      operationId: private-create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateUserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPublic'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    AttendanceCreate:
      properties:
        check_in:
          type: string
          format: date-time
          title: Check In
        check_out:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Check Out
        break_duration:
          anyOf:
          - type: integer
          - type: 'null'
          title: Break Duration
          default: 0
        location:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Location
        notes:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Notes
      type: object
      required:
      - check_in
      title: AttendanceCreate
    AttendancePublic:
      properties:
        check_in:
          type: string
          format: date-time
          title: Check In
        check_out:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Check Out
        break_duration:
          anyOf:
          - type: integer
          - type: 'null'
          title: Break Duration
          default: 0
        location:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Location
        notes:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Notes
        id:
          type: string
          format: uuid
          title: Id
        employee_id:
          type: string
          format: uuid
          title: Employee Id
        date:
          type: string
          format: date-time
          title: Date
        created_at:
          type: string
          format: date-time
          title: Created At
      type: object
      required:
      - check_in
      - id
      - employee_id
      - date
      - created_at
      title: AttendancePublic
    AttendanceUpdate:
      properties:
        check_out:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Check Out
        break_duration:
          anyOf:
          - type: integer
          - type: 'null'
          title: Break Duration
        notes:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Notes
      type: object
      title: AttendanceUpdate
    AttendancesPublic:
      properties:
        data:
          items:
            $ref: '#/components/schemas/AttendancePublic'
          type: array
          title: Data
        count:
          type: integer
          title: Count
      type: object
      required:
      - data
      - count
      title: AttendancesPublic
    Body_login-login_access_token:
      properties:
        grant_type:
          anyOf:
          - type: string
            pattern: password
          - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Secret
      type: object
      required:
      - username
      - password
      title: Body_login-login_access_token
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ItemCreate:
      properties:
        title:
          type: string
          maxLength: 255
          minLength: 1
          title: Title
        description:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Description
      type: object
      required:
      - title
      title: ItemCreate
    ItemPublic:
      properties:
        title:
          type: string
          maxLength: 255
          minLength: 1
          title: Title
        description:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Description
        id:
          type: string
          format: uuid
          title: Id
        owner_id:
          type: string
          format: uuid
          title: Owner Id
      type: object
      required:
      - title
      - id
      - owner_id
      title: ItemPublic
    ItemUpdate:
      properties:
        title:
          anyOf:
          - type: string
            maxLength: 255
            minLength: 1
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Description
      type: object
      title: ItemUpdate
    ItemsPublic:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ItemPublic'
          type: array
          title: Data
        count:
          type: integer
          title: Count
      type: object
      required:
      - data
      - count
      title: ItemsPublic
    LeaveRequestCreate:
      properties:
        leave_type:
          type: string
          maxLength: 50
          title: Leave Type
        start_date:
          type: string
          format: date-time
          title: Start Date
        end_date:
          type: string
          format: date-time
          title: End Date
        reason:
          type: string
          maxLength: 500
          title: Reason
        status:
          $ref: '#/components/schemas/LeaveStatus'
          default: pending
      type: object
      required:
      - leave_type
      - start_date
      - end_date
      - reason
      title: LeaveRequestCreate
    LeaveRequestPublic:
      properties:
        leave_type:
          type: string
          maxLength: 50
          title: Leave Type
        start_date:
          type: string
          format: date-time
          title: Start Date
        end_date:
          type: string
          format: date-time
          title: End Date
        reason:
          type: string
          maxLength: 500
          title: Reason
        status:
          $ref: '#/components/schemas/LeaveStatus'
          default: pending
        id:
          type: string
          format: uuid
          title: Id
        employee_id:
          type: string
          format: uuid
          title: Employee Id
        supervisor_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
        supervisor_comments:
          anyOf:
          - type: string
          - type: 'null'
          title: Supervisor Comments
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
      - leave_type
      - start_date
      - end_date
      - reason
      - id
      - employee_id
      - supervisor_id
      - supervisor_comments
      - created_at
      - updated_at
      title: LeaveRequestPublic
    LeaveRequestUpdate:
      properties:
        status:
          $ref: '#/components/schemas/LeaveStatus'
        supervisor_comments:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Supervisor Comments
      type: object
      required:
      - status
      title: LeaveRequestUpdate
    LeaveRequestsPublic:
      properties:
        data:
          items:
            $ref: '#/components/schemas/LeaveRequestPublic'
          type: array
          title: Data
        count:
          type: integer
          title: Count
      type: object
      required:
      - data
      - count
      title: LeaveRequestsPublic
    LeaveStatus:
      type: string
      enum:
      - pending
      - approved
      - rejected
      title: LeaveStatus
    Message:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
      - message
      title: Message
    NewPassword:
      properties:
        token:
          type: string
          title: Token
        new_password:
          type: string
          maxLength: 40
          minLength: 8
          title: New Password
      type: object
      required:
      - token
      - new_password
      title: NewPassword
    PrivateUserCreate:
      properties:
        email:
          type: string
          title: Email
        password:
          type: string
          title: Password
        full_name:
          type: string
          title: Full Name
        is_verified:
          type: boolean
          title: Is Verified
          default: false
      type: object
      required:
      - email
      - password
      - full_name
      title: PrivateUserCreate
    QRCodePublic:
      properties:
        code:
          type: string
          maxLength: 255
          title: Code
        expires_at:
          type: string
          format: date-time
          title: Expires At
        is_used:
          type: boolean
          title: Is Used
          default: false
        id:
          type: string
          format: uuid
          title: Id
        created_at:
          type: string
          format: date-time
          title: Created At
      type: object
      required:
      - code
      - expires_at
      - id
      - created_at
      title: QRCodePublic
    TeamAssignmentCreate:
      properties:
        team_name:
          type: string
          maxLength: 100
          title: Team Name
        site_location:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Site Location
      type: object
      required:
      - team_name
      title: TeamAssignmentCreate
    TeamAssignmentPublic:
      properties:
        team_name:
          type: string
          maxLength: 100
          title: Team Name
        site_location:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Site Location
        id:
          type: string
          format: uuid
          title: Id
        supervisor_id:
          type: string
          format: uuid
          title: Supervisor Id
        laborer_id:
          type: string
          format: uuid
          title: Laborer Id
        assigned_date:
          type: string
          format: date-time
          title: Assigned Date
        is_active:
          type: boolean
          title: Is Active
      type: object
      required:
      - team_name
      - id
      - supervisor_id
      - laborer_id
      - assigned_date
      - is_active
      title: TeamAssignmentPublic
    Token:
      properties:
        access_token:
          type: string
          title: Access Token
        token_type:
          type: string
          title: Token Type
          default: bearer
      type: object
      required:
      - access_token
      title: Token
    UpdatePassword:
      properties:
        current_password:
          type: string
          maxLength: 40
          minLength: 8
          title: Current Password
        new_password:
          type: string
          maxLength: 40
          minLength: 8
          title: New Password
      type: object
      required:
      - current_password
      - new_password
      title: UpdatePassword
    UserCreate:
      properties:
        email:
          type: string
          maxLength: 255
          format: email
          title: Email
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_superuser:
          type: boolean
          title: Is Superuser
          default: false
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
        role:
          $ref: '#/components/schemas/UserRole'
          default: laborer
        employee_id:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Employee Id
        department:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Department
        supervisor_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
        password:
          type: string
          maxLength: 40
          minLength: 8
          title: Password
      type: object
      required:
      - email
      - password
      title: UserCreate
    UserPublic:
      properties:
        email:
          type: string
          maxLength: 255
          format: email
          title: Email
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_superuser:
          type: boolean
          title: Is Superuser
          default: false
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
        role:
          $ref: '#/components/schemas/UserRole'
          default: laborer
        employee_id:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Employee Id
        department:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Department
        supervisor_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
        id:
          type: string
          format: uuid
          title: Id
      type: object
      required:
      - email
      - id
      title: UserPublic
    UserRegister:
      properties:
        email:
          type: string
          maxLength: 255
          format: email
          title: Email
        password:
          type: string
          maxLength: 40
          minLength: 8
          title: Password
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
      type: object
      required:
      - email
      - password
      title: UserRegister
    UserRole:
      type: string
      enum:
      - admin
      - supervisor
      - laborer
      title: UserRole
    UserUpdate:
      properties:
        email:
          anyOf:
          - type: string
            maxLength: 255
            format: email
          - type: 'null'
          title: Email
        is_active:
          type: boolean
          title: Is Active
          default: true
        is_superuser:
          type: boolean
          title: Is Superuser
          default: false
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
        role:
          $ref: '#/components/schemas/UserRole'
          default: laborer
        employee_id:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Employee Id
        department:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Department
        supervisor_id:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Supervisor Id
        password:
          anyOf:
          - type: string
            maxLength: 40
            minLength: 8
          - type: 'null'
          title: Password
      type: object
      title: UserUpdate
    UserUpdateMe:
      properties:
        full_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Full Name
        email:
          anyOf:
          - type: string
            maxLength: 255
            format: email
          - type: 'null'
          title: Email
      type: object
      title: UserUpdateMe
    UsersPublic:
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserPublic'
          type: array
          title: Data
        count:
          type: integer
          title: Count
      type: object
      required:
      - data
      - count
      title: UsersPublic
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WorkerCreate:
      properties:
        name:
          type: string
          maxLength: 255
          title: Name
        gender:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Gender
        department:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Department
        address:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Address
        aadhar:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Aadhar
        bankname:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Bankname
        ifscode:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Ifscode
        accountno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Accountno
        pfno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Pfno
        esicno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Esicno
      type: object
      required:
      - name
      title: WorkerCreate
    WorkerPublic:
      properties:
        name:
          type: string
          maxLength: 255
          title: Name
        gender:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Gender
        department:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Department
        address:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Address
        aadhar:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Aadhar
        bankname:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Bankname
        ifscode:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Ifscode
        accountno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Accountno
        pfno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Pfno
        esicno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Esicno
        id:
          type: string
          format: uuid
          title: Id
        owner_id:
          type: string
          format: uuid
          title: Owner Id
      type: object
      required:
      - name
      - id
      - owner_id
      title: WorkerPublic
    WorkerUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Name
        gender:
          anyOf:
          - type: string
            maxLength: 50
          - type: 'null'
          title: Gender
        department:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Department
        address:
          anyOf:
          - type: string
            maxLength: 500
          - type: 'null'
          title: Address
        aadhar:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Aadhar
        bankname:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Bankname
        ifscode:
          anyOf:
          - type: string
            maxLength: 20
          - type: 'null'
          title: Ifscode
        accountno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Accountno
        pfno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Pfno
        esicno:
          anyOf:
          - type: string
            maxLength: 30
          - type: 'null'
          title: Esicno
      type: object
      title: WorkerUpdate
    WorkersPublic:
      properties:
        data:
          items:
            $ref: '#/components/schemas/WorkerPublic'
          type: array
          title: Data
        count:
          type: integer
          title: Count
      type: object
      required:
      - data
      - count
      title: WorkersPublic
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /api/v1/login/access-token
